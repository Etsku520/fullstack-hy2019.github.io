{"version":3,"sources":["webpack:///./src/templates/PartIntroTemplate.js"],"names":["PartIntroTemplate","_ref","markdownRemark","data","frontmatter","html","mainImage","title","partColor","part","navigation","parserOptions","replace","_ref2","type","attribs","children","class","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","domToReact","navArray","split","_components_layout__WEBPACK_IMPORTED_MODULE_11__","_components_Banner_Banner__WEBPACK_IMPORTED_MODULE_8__","style","backgroundImage","path","resolve","publicURL","backgroundPosition","backgroundSize","backgroundRepeat","backgroundColor","colors","_components_Element_Element__WEBPACK_IMPORTED_MODULE_9__","_components_Arrow_Arrow__WEBPACK_IMPORTED_MODULE_7__","upperCase","content","text","Parser","stack","map","n","arr","letter","_components_PrevNext_PrevNext__WEBPACK_IMPORTED_MODULE_12__","prev","undefined","next","_components_Footer_Footer__WEBPACK_IMPORTED_MODULE_10__","partInfoQuery"],"mappings":"0UAiBe,SAASA,EAATC,GAAqC,IAC1CC,EAD0CD,EAARE,KAClCD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACbC,EAAkDF,EAAlDE,UAAWC,EAAuCH,EAAvCG,MAAOC,EAAgCJ,EAAhCI,UAAWC,EAAqBL,EAArBK,KAAMC,EAAeN,EAAfM,WAErCC,EAAgB,CACpBC,QAAS,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,KAAMC,EAAwBF,EAAxBE,QAASC,EAAeH,EAAfG,SACzB,GAAa,QAATF,GAAoC,UAAlBC,EAAQE,MAC5B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,IAAWN,EAAUL,MAO/CY,EAAWb,EAAaA,EAAWc,MAAM,KAAO,GAEtD,OACEN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAe,OAASC,IAAKC,QAAQxB,EAAUyB,WAAhC,IACfC,mBAAoB,eACpBC,eAAgB,MAChBC,iBAAkB,YAClBC,gBAAiBC,EAAO5B,IAE1Ba,UAAU,0BAEVH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAShB,UAAU,aACjBH,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,CACP,CAAEL,gBAAiBC,EAAO5B,GAAYiC,KAAM,WAC5C,CACEN,gBAAiB,QACjBM,KAAMlC,MAKZW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcqB,IAAOrC,EAAMM,IAC1CO,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEjB,UAAU,UACVsB,OAAK,EACLH,QAASjB,EAASqB,IAAI,SAAAC,GACpB,IAAMC,EAAMD,EAAErB,MAAM,KAEpB,MAAO,CACLuB,OAAQD,EAAI,GACZjB,KAAMiB,EAAI,GACVL,KAAMK,EAAI,UAOpB5B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEC,KAAMxC,EAAO,EAAIA,EAAO,OAAIyC,EAC5BC,KAAM1C,EAAO,EAAIA,EAAO,OAAIyC,IAG9BhC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,OAKC,IAAMC,EAAa","file":"component---src-templates-part-intro-template-js-e127ffb7014391be7024.js","sourcesContent":["import './PartIntroTemplate.scss';\n\nimport path from 'path';\n\nimport { graphql } from 'gatsby';\nimport Parser from 'html-react-parser';\nimport domToReact from 'html-react-parser/lib/dom-to-react';\nimport React from 'react';\n\nimport colors from '../colors';\nimport Arrow from '../components/Arrow/Arrow';\nimport { Banner } from '../components/Banner/Banner';\nimport Element from '../components/Element/Element';\nimport Footer from '../components/Footer/Footer';\nimport Layout from '../components/layout';\nimport PrevNext from '../components/PrevNext/PrevNext';\n\nexport default function PartIntroTemplate({ data }) {\n  const { markdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n  const { mainImage, title, partColor, part, navigation } = frontmatter;\n\n  const parserOptions = {\n    replace: ({ type, attribs, children }) => {\n      if (type === 'tag' && attribs.class === 'intro') {\n        return (\n          <div className=\"col-7\">{domToReact(children, parserOptions)}</div>\n        );\n      }\n      return;\n    },\n  };\n\n  const navArray = navigation ? navigation.split('@') : [];\n\n  return (\n    <Layout>\n      <Banner\n        style={{\n          backgroundImage: `url(${path.resolve(mainImage.publicURL)})`,\n          backgroundPosition: 'center right',\n          backgroundSize: '80%',\n          backgroundRepeat: 'no-repeat',\n          backgroundColor: colors[partColor],\n        }}\n        className=\"spacing spacing--after\"\n      >\n        <Element className=\"container\">\n          <Arrow\n            upperCase\n            content={[\n              { backgroundColor: colors[partColor], text: 'YleistÃ¤' },\n              {\n                backgroundColor: 'black',\n                text: title,\n              },\n            ]}\n          />\n\n          <div className=\"part-intro\">{Parser(html, parserOptions)}</div>\n          <Arrow\n            className=\"spacing\"\n            stack\n            content={navArray.map(n => {\n              const arr = n.split('|');\n\n              return {\n                letter: arr[0],\n                path: arr[1],\n                text: arr[2],\n              };\n            })}\n          />\n        </Element>\n      </Banner>\n\n      <PrevNext\n        prev={part > 0 ? part - 1 : undefined}\n        next={part < 8 ? part + 1 : undefined}\n      />\n\n      <Footer />\n    </Layout>\n  );\n}\n\nexport const partInfoQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        path\n        mainImage {\n          publicURL\n        }\n        partColor\n        part\n        letter\n        navigation\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}